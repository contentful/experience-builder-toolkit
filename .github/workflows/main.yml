name: Main

on:
  push:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  install-build:
    uses: ./.github/workflows/build.yaml
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  check:
    needs: install-build
    uses: ./.github/workflows/check.yaml
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  publish:
    needs: [install-build, check]
    if: (github.ref_name == 'main' || github.ref_name == 'development' || github.ref_name == 'next') && !contains(github.event.head_commit.message, 'skip-release')
    permissions:
      contents: write
    uses: ./.github/workflows/publish.yaml
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  upload-artifact-cleanup:
    if: ${{ always() }}
    needs: [install-build, check, publish]
    runs-on: ubuntu-latest
    steps:
      - name: Restore the build folders
        uses: actions/cache/restore@v3
        with:
          path: |
            packages/*/dist
            packages/*/build
          key: build-cache-${{ github.run_id }}-${{ github.run_attempt }}
      - name: Save build folder to artifact
        uses: actions/upload-artifact@v3
        with:
          name: built-assets
          if-no-files-found: error
          path: |
            packages/*/dist
            packages/*/build
      - name: Cleanup build cache
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh extension install actions/gh-actions-cache
          cacheKey = "build-cache-${{ github.run_id }}-${{ github.run_attempt }}"
          echo "Deleting cache key: $cacheKey"
          gh actions-cache delete $cacheKey --confirm
          echo "Done"
